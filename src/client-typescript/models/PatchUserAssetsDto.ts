/* tslint:disable */
/* eslint-disable */
/**
 * ZPI API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: all
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { OperationType } from './OperationType';
import {
    OperationTypeFromJSON,
    OperationTypeFromJSONTyped,
    OperationTypeToJSON,
} from './OperationType';

/**
 * 
 * @export
 * @interface PatchUserAssetsDto
 */
export interface PatchUserAssetsDto {
    /**
     * 
     * @type {number}
     * @memberof PatchUserAssetsDto
     */
    value: number;
    /**
     * 
     * @type {OperationType}
     * @memberof PatchUserAssetsDto
     */
    type: OperationType;
    /**
     * 
     * @type {string}
     * @memberof PatchUserAssetsDto
     */
    assetName: string;
    /**
     * 
     * @type {string}
     * @memberof PatchUserAssetsDto
     */
    description: string;
}

/**
 * Check if a given object implements the PatchUserAssetsDto interface.
 */
export function instanceOfPatchUserAssetsDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "value" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "assetName" in value;
    isInstance = isInstance && "description" in value;

    return isInstance;
}

export function PatchUserAssetsDtoFromJSON(json: any): PatchUserAssetsDto {
    return PatchUserAssetsDtoFromJSONTyped(json, false);
}

export function PatchUserAssetsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchUserAssetsDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'value': json['value'],
        'type': OperationTypeFromJSON(json['type']),
        'assetName': json['assetName'],
        'description': json['description'],
    };
}

export function PatchUserAssetsDtoToJSON(value?: PatchUserAssetsDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'value': value.value,
        'type': OperationTypeToJSON(value.type),
        'assetName': value.assetName,
        'description': value.description,
    };
}

