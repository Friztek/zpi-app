/* tslint:disable */
/* eslint-disable */
/**
 * ZPI API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: all
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AssetDto
 */
export interface AssetDto {
    /**
     * 
     * @type {string}
     * @memberof AssetDto
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof AssetDto
     */
    friendlyName: string;
    /**
     * 
     * @type {string}
     * @memberof AssetDto
     */
    category: string;
    /**
     * 
     * @type {string}
     * @memberof AssetDto
     */
    symbol: string | null;
}

/**
 * Check if a given object implements the AssetDto interface.
 */
export function instanceOfAssetDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "friendlyName" in value;
    isInstance = isInstance && "category" in value;
    isInstance = isInstance && "symbol" in value;

    return isInstance;
}

export function AssetDtoFromJSON(json: any): AssetDto {
    return AssetDtoFromJSONTyped(json, false);
}

export function AssetDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AssetDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'friendlyName': json['friendlyName'],
        'category': json['category'],
        'symbol': json['symbol'],
    };
}

export function AssetDtoToJSON(value?: AssetDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'friendlyName': value.friendlyName,
        'category': value.category,
        'symbol': value.symbol,
    };
}

